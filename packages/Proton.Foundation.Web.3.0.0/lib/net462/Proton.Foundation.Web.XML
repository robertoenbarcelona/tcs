<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Proton.Foundation.Web</name>
    </assembly>
    <members>
        <member name="T:Proton.Foundation.Web.Controllers.BaseController`1">
            <summary>
            
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.#ctor(Proton.Foundation.Core.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Proton.Foundation.Web.Controllers.BaseController`1"/> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.BaseController`1.Logger">
            <summary>
            Gets the logger.
            </summary>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.GenerateLinks(`0,System.String)">
            <summary>
            Generates the links.
            </summary>
            <param name="result">The result.</param>
            <param name="href">The href.</param>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.GetSerializeSettings(Newtonsoft.Json.Serialization.IContractResolver)">
            <summary>
            Gets the serialize settings.
            </summary>
            <param name="resolver">The resolver.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.SendTelemetry200(System.Diagnostics.Stopwatch)">
            <summary>
            Sends the telemetry 200 event.
            </summary>
            <param name="stopwatch">The stopwatch.</param>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.SendTelemetry201(System.Diagnostics.Stopwatch)">
            <summary>
            Sends the telemetry 201 event.
            </summary>
            <param name="stopwatch">The stopwatch.</param>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.SendTelemetry204(System.Diagnostics.Stopwatch)">
            <summary>
            Sends the telemetry for 204 result.
            </summary>
            <param name="stopwatch">The stopwatch.</param>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.SendTelemetry400(System.Diagnostics.Stopwatch)">
            <summary>
            Sends the telemetry 400 event.
            </summary>
            <param name="stopwatch">The stopwatch.</param>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.SendTelemetry404(System.Diagnostics.Stopwatch)">
            <summary>
            Sends the telemetry 404 event.
            </summary>
            <param name="stopwatch">The stopwatch.</param>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.SendTelemetry409(System.Diagnostics.Stopwatch)">
            <summary>
            Sends the telemetry 409 event.
            </summary>
            <param name="stopwatch">The stopwatch.</param>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.SendTelemetry500(System.Diagnostics.Stopwatch,System.Exception)">
            <summary>
            Sends the telemetry 500 event and exception.
            </summary>
            <param name="stopwatch">The stopwatch.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.GetTelemetryWatch(System.String)">
            <summary>
            Gets the telemetry watch.
            </summary>
            <param name="requestName">Name of the request.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.HandleError(System.Diagnostics.Stopwatch,System.Exception)">
            <summary>
            Handles the error.
            </summary>
            <param name="stopwatch">The stopwatch.</param>
            <param name="ex">The ex.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.GetRequestUriAPI">
            <summary>
            Gets the request URI API.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.HandleNotFound(System.Diagnostics.Stopwatch)">
            <summary>
            Handles the not found.
            </summary>
            <param name="stopwatch">The stopwatch.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.BaseController`1.HandleBadRequest(System.Diagnostics.Stopwatch)">
            <summary>
            Handles the bad request.
            </summary>
            <param name="stopwatch">The stopwatch.</param>
            <returns></returns>
        </member>
        <member name="T:Proton.Foundation.Web.Controllers.QueryableAsyncController`1">
            <summary>
            
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.QueryableAsyncController`1.#ctor(Proton.Foundation.Core.Services.IQueryableServiceAsync{`0},Proton.Foundation.Core.UnitOfWork.IUnitOfWorkAsync,Proton.Foundation.Core.Installation.ISerializationConfigurePolicy{`0},Proton.Foundation.Core.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Proton.Foundation.Web.Controllers.QueryableAsyncController`1"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="unitOfWork">The unit of work.</param>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.QueryableAsyncController`1.Policy">
            <summary>
            Gets the policy.
            </summary>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.QueryableAsyncController`1.Service">
            <summary>
            Gets the service.
            </summary>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.QueryableAsyncController`1.UnitOfWork">
            <summary>
            Gets the unit of work.
            </summary>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.QueryableAsyncController`1.GetAsync(System.String,System.Nullable{Proton.Foundation.Core.Serialization.SerializationMode},System.Func{`0,System.Threading.Tasks.Task},System.String)">
            <summary>
            Gets the asynchronous.
            </summary>
            <param name="id">The id.</param>
            <param name="mode">The mode.</param>
            <param name="gotten">The gotten.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.QueryableAsyncController`1.QueryAsync(Proton.Foundation.Core.Data.IQueryObject{`0},System.Nullable{Proton.Foundation.Core.Serialization.SerializationMode},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Nullable{System.Int32},System.Action{Proton.Foundation.Core.Data.InternalResultSet{`0}})">
            <summary>
            Queries the asynchronous.
            </summary>
            <param name="query">The query.</param>
            <param name="mode">The mode.</param>
            <param name="orderBy">The order by.</param>
            <param name="token">The token.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="searched">The searched.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.QueryableAsyncController`1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources that are used by the object and, optionally, releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Proton.Foundation.Web.Controllers.QueryableController`1">
            <summary>
            
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.QueryableController`1.#ctor(Proton.Foundation.Core.Services.IQueryableService{`0},Proton.Foundation.Core.UnitOfWork.IUnitOfWork,Proton.Foundation.Core.Installation.ISerializationConfigurePolicy{`0},Proton.Foundation.Core.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Proton.Foundation.Web.Controllers.QueryableController`1"/> class.
            </summary>
            <param name="service">The service.</param>
            <param name="unitOfWork">The unit of work.</param>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.QueryableController`1.Policy">
            <summary>
            Gets the policy.
            </summary>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.QueryableController`1.Service">
            <summary>
            Gets the service.
            </summary>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.QueryableController`1.UnitOfWork">
            <summary>
            Gets the unit of work.
            </summary>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.QueryableController`1.Get(System.String,System.Nullable{Proton.Foundation.Core.Serialization.SerializationMode},System.Action{`0})">
            <summary>
            Gets the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="mode">The mode.</param>
            <param name="gotten">The gotten.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.QueryableController`1.Query(Proton.Foundation.Core.Data.IQueryObject{`0},System.Nullable{Proton.Foundation.Core.Serialization.SerializationMode},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Action{System.Collections.Generic.List{`0}})">
            <summary>
            Queries the specified query.
            </summary>
            <param name="query">The query.</param>
            <param name="mode">The mode.</param>
            <param name="orderBy">The order by.</param>
            <param name="page">The page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="searched">The searched.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.QueryableController`1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources that are used by the object and, optionally, releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Proton.Foundation.Web.Controllers.WritableAsyncController`1">
            <summary>
            
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableAsyncController`1.#ctor(Proton.Foundation.Core.Services.IWritableServiceAsync{`0},Proton.Foundation.Core.UnitOfWork.IUnitOfWorkAsync,Proton.Foundation.Core.Installation.ISerializationConfigurePolicy{`0},Proton.Foundation.Core.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Proton.Foundation.Web.Controllers.WritableAsyncController`1" /> class.
            </summary>
            <param name="service">The service.</param>
            <param name="unitOfWork">The unit of work.</param>
            <param name="policy">The policy.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.WritableAsyncController`1.Policy">
            <summary>
            Gets the policy.
            </summary>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.WritableAsyncController`1.Service">
            <summary>
            Gets the service.
            </summary>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.WritableAsyncController`1.UnitOfWork">
            <summary>
            Gets the unit of work.
            </summary>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableAsyncController`1.GetAsync(System.String,System.Nullable{Proton.Foundation.Core.Serialization.SerializationMode},System.Func{`0,System.Threading.Tasks.Task},System.String)">
            <summary>
            Gets the asynchronous.
            </summary>
            <param name="id">The id.</param>
            <param name="mode">The mode.</param>
            <param name="gotten">The gotten.</param>
            <param name="partitionKey">The partition key.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableAsyncController`1.PostAsync(`0,System.Func{`0,`0},System.Func{`0,System.Threading.Tasks.Task})">
            <summary>
            Posts the asynchronous.
            </summary>
            <param name="entity">The entity.</param>
            <param name="posting">The posting.</param>
            <param name="posted">The posted.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableAsyncController`1.PutAsync(System.String,`0,System.Func{`0,`0},System.Func{`0,System.Threading.Tasks.Task})">
            <summary>
            Puts the asynchronous.
            </summary>
            <param name="id">The id.</param>
            <param name="entity">The entity.</param>
            <param name="putting">The putting.</param>
            <param name="putted">The putted.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableAsyncController`1.DeleteAsync(System.String,System.String,System.Func{`0,`0},System.Func{`0,System.Threading.Tasks.Task},System.String)">
            <summary>
            Deletes the asynchronous.
            </summary>
            <param name="id">The id.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="deleting">The deleting.</param>
            <param name="deleted">The deleted.</param>
            <param name="partitionKey">The partition key.</param>
            <returns></returns>
            <exception cref="T:Proton.Foundation.Core.Data.DataConcurrencyException"></exception>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableAsyncController`1.QueryAsync(Proton.Foundation.Core.Data.IQueryObject{`0},System.Nullable{Proton.Foundation.Core.Serialization.SerializationMode},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Nullable{System.Int32},System.Func{Proton.Foundation.Core.Data.InternalResultSet{`0},System.Threading.Tasks.Task})">
            <summary>
            Queries the asynchronous.
            </summary>
            <param name="query">The query.</param>
            <param name="mode">The mode.</param>
            <param name="orderBy">The order by.</param>
            <param name="token">The token.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="searched">The searched.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableAsyncController`1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources that are used by the object and, optionally, releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Proton.Foundation.Web.Controllers.WritableController`1">
            <summary>
            
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableController`1.#ctor(Proton.Foundation.Core.Services.IWritableService{`0},Proton.Foundation.Core.UnitOfWork.IUnitOfWork,Proton.Foundation.Core.Installation.ISerializationConfigurePolicy{`0},Proton.Foundation.Core.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Proton.Foundation.Web.Controllers.WritableController`1" /> class.
            </summary>
            <param name="service">The service.</param>
            <param name="unitOfWork">The unit of work.</param>
            <param name="policy">The policy.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.WritableController`1.Policy">
            <summary>
            Gets the policy.
            </summary>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.WritableController`1.Service">
            <summary>
            Gets the service.
            </summary>
            <value>
            The service.
            </value>
        </member>
        <member name="P:Proton.Foundation.Web.Controllers.WritableController`1.UnitOfWork">
            <summary>
            Gets the unit of work.
            </summary>
            <value>
            The unit of work.
            </value>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableController`1.Get(System.String,System.Nullable{Proton.Foundation.Core.Serialization.SerializationMode},System.Action{`0})">
            <summary>
            Gets the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="mode">The mode.</param>
            <param name="gotten">The gotten.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableController`1.Post(`0,System.Func{`0,`0},System.Action{`0})">
            <summary>
            Posts the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <param name="posting">The posting.</param>
            <param name="posted">The posted.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableController`1.Put(System.String,`0,System.Func{`0,`0},System.Action{`0})">
            <summary>
            Puts the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="entity">The entity.</param>
            <param name="putting">The putting.</param>
            <param name="putted">The putted.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableController`1.Delete(System.String,System.String,System.Func{`0,`0},System.Action{`0})">
            <summary>
            Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="deleting">The deleting.</param>
            <param name="deleted">The deleted.</param>
            <returns></returns>
            <exception cref="T:Proton.Foundation.Core.Data.DataConcurrencyException"></exception>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableController`1.Query(Proton.Foundation.Core.Data.IQueryObject{`0},System.Nullable{Proton.Foundation.Core.Serialization.SerializationMode},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Action{System.Collections.Generic.List{`0}})">
            <summary>
            Queries the specified query.
            </summary>
            <param name="query">The query.</param>
            <param name="mode">The mode.</param>
            <param name="orderBy">The order by.</param>
            <param name="page">The page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="searched">The searched.</param>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Controllers.WritableController`1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources that are used by the object and, optionally, releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Proton.Foundation.Web.HttpActionResults.GetContentActionResult`1">
            <summary>
            
            </summary>
            <typeparam name="T">The type of the enity.</typeparam>
            <seealso cref="T:System.Web.Http.IHttpActionResult" />
        </member>
        <member name="M:Proton.Foundation.Web.HttpActionResults.GetContentActionResult`1.#ctor(System.Net.Http.HttpRequestMessage,System.String,`0,Newtonsoft.Json.JsonSerializerSettings,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Proton.Foundation.Web.HttpActionResults.GetContentActionResult`1"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="location">The location.</param>
            <param name="entity">The entity.</param>
            <param name="settings">The settings.</param>
            <param name="token">The token.</param>
        </member>
        <member name="P:Proton.Foundation.Web.HttpActionResults.GetContentActionResult`1.Entity">
            <summary>
            Gets the entity.
            </summary>
        </member>
        <member name="M:Proton.Foundation.Web.HttpActionResults.GetContentActionResult`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> asynchronously.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>
            A task that, when completed, contains the <see cref="T:System.Net.Http.HttpResponseMessage" />.
            </returns>
        </member>
        <member name="T:Proton.Foundation.Web.Installation.ApiManagementModule">
            <summary>
            Http Module that is responsible of fowarding direct calls to api's to pass by Api Management Proxy.
            </summary>
        </member>
        <member name="M:Proton.Foundation.Web.Installation.ApiManagementModule.Dispose">
            <summary>
            Dispose disposable objects used in this module.
            </summary>
        </member>
        <member name="M:Proton.Foundation.Web.Installation.ApiManagementModule.Init(System.Web.HttpApplication)">
            <summary>
            Inits module
            </summary>
            <param name="context">HttpApplication context</param>
        </member>
        <member name="M:Proton.Foundation.Web.Installation.ApiManagementModule.OnBeginRequest(System.Object,System.EventArgs)">
            <summary>
            Delegate that handles BeginRequest event of the Application.
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">event args of the event</param>
        </member>
        <member name="T:Proton.Foundation.Web.Installation.ProtonWebApiApplication">
            <summary>
            A base application class for Web API 2 Proton based applications
            </summary>
            <seealso cref="T:System.Web.HttpApplication" />
        </member>
        <member name="M:Proton.Foundation.Web.Installation.ProtonWebApiApplication.Application_Start">
            <summary>
            Called when the application the start.
            </summary>
            <remarks>This class register Foundation beehaviour like Swagger, CRUD routes and IoC behaviour. Can be extended.</remarks>
        </member>
        <member name="M:Proton.Foundation.Web.Installation.ProtonWebApiApplication.RegisterWebApiExtension(System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the web API extension.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="M:Proton.Foundation.Web.Installation.ProtonWebApiApplication.GetVersionInfo">
            <summary>
            Gets the version information actions to build the multiversion API.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Proton.Foundation.Web.Installation.ProtonWebApiApplication.GetApplicationAssemblyName">
            <summary>
            Gets the client application assembly name.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Proton.Foundation.Web.OAuth.BusinessOperationAuthorizeAttribute">
            <summary>
            Holds the authentication process for a known identity
            </summary>
            <seealso cref="T:System.Web.Http.AuthorizeAttribute" />
        </member>
        <member name="M:Proton.Foundation.Web.OAuth.BusinessOperationAuthorizeAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Proton.Foundation.Web.OAuth.BusinessOperationAuthorizeAttribute"/> class.
            </summary>
            <param name="moduleCode">The module code.</param>
            <param name="operationCode">The operation code.</param>
        </member>
    </members>
</doc>
